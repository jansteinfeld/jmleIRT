% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jmle_estimation.r
\name{jmle_estimation}
\alias{jmle_estimation}
\title{Fit Rasch model by JML with optional WLE}
\usage{
jmle_estimation(
  X,
  max_iter = 1000,
  conv = 1e-06,
  eps = 0,
  bias_correction = FALSE,
  center = "items",
  max_update = 1.5,
  verbose = FALSE,
  estimatewle = FALSE,
  wle_adj = 1e-08
)
}
\arguments{
\item{X}{Numeric matrix of responses (0/1) with possible NA for missing.}

\item{max_iter}{Maximum NR iterations in C++ (default 1000).}

\item{conv}{Convergence threshold on maximum absolute parameter change.}

\item{eps}{Epsilon adjustment for extreme person scores (default 0).}

\item{bias_correction}{Logical, simple post-hoc scaling of item betas.}

\item{center}{either "items" or "persons"; enforce mean(beta)=0 or mean(theta)=0.}

\item{max_update}{Step-size clip per update to stabilize NR (default 1.5).}

\item{verbose}{Logical, periodic progress from C++ (every 10 iters).}

\item{estimatewle}{Logical, compute Warm's WLE per person using estimated beta.}

\item{wle_adj}{Small adjustment to avoid extreme raw scores in WLE (default 1e-8).}
}
\value{
A list with components:
  - theta: numeric vector of person parameters
  - beta: numeric vector of item difficulties (mean 0 if center = TRUE)
  - iterations: integer iterations used
  - converged: logical convergence indicator
  - bias_correction, centered: echoes of inputs
  - wle_estimate: numeric vector of WLE (if estimatewle = TRUE) or NA
}
\description{
Fits the Rasch (1PL) model using joint maximum likelihood via an efficient
C++ Newton-Raphson implementation. Missing responses (NA) are allowed.
Optional epsilon adjustment helps avoid biased estimates due to extreme-score degeneracy, and
centering ensures identifiability. Optionally returns Warm's WLE person
estimates computed with the estimated item difficulties.
}
